@page "/journalEntry"
@using EspressoJournal.Data
@using Radzen
@using Radzen.Blazor
@using Microsoft.AspNetCore.Components.Web
@using EspressoJournal.Models
@using System.Net.Http.Json
@inject JournalEntryDataAccess dataAccess

<h3>Journal Entries</h3>

<style>
    .rz-grid-table {
        width: unset;
    }
    @* .rz-numeric .rz-spinner {
        display: none !important; /* Hide the increment/decrement buttons */
    } *@
</style>

<RadzenDataGrid @ref="journalEntryGrid" AllowAlternatingRows="false" AllowFiltering="true" AllowPaging="true"
    PageSize="5" AllowSorting="true" Data="@journalEntries" TItem="JournalEntryModel" EditMode="@editMode"
    RowCreate="@OnCreateRow" RowUpdate="@OnUpdateRow" Sort="@Reset" Page="@Reset" Filter="@Reset" ColumnWidth="200px">
    <HeaderTemplate>
        <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle" Text="Add New Journal Entry"
            Click="@InsertRow"
            Disabled="@(editMode == DataGridEditMode.Single && journalEntriesToCreate.Count() > 0)" />
    </HeaderTemplate>
    <Columns>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="EspressoBeanName" Title="Espresso Bean Name">
            <EditTemplate Context="journalEntry">
                <RadzenDropDown @bind-Value="journalEntry.EspressoBeanId" Data="@journalEntries.Select(j => new
                {
                    Id = j.EspressoBeanId,
                    Name = j.EspressoBeanName
                })" TextProperty="Name" ValueProperty="Id" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="GrinderId" Title="Grinder ID">
            <EditTemplate Context="journalEntry">
                <RadzenNumeric @bind-Value="journalEntry.GrinderId" Style="width:100%" ShowUpDown="false" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="GrindSetting" Title="Grind Setting">
            <EditTemplate Context="journalEntry">
                <RadzenNumeric @bind-Value="journalEntry.GrindSetting" Style="width:100%" ShowUpDown="false" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="BeanWeightInGrams" Title="Bean Weight (g)">
            <EditTemplate Context="journalEntry">
                <RadzenNumeric @bind-Value="journalEntry.BeanWeightInGrams" Style="width:100%" ShowUpDown="false" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="PreExtractionTimeInSeconds"
            Title="Pre-Extraction Time (s)">
            <EditTemplate Context="journalEntry">
                <RadzenNumeric @bind-Value="journalEntry.PreExtractionTimeInSeconds" Style="width:100%"
                    ShowUpDown="false" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="ExtractionTimeInSeconds" Title="Extraction Time (s)">
            <EditTemplate Context="journalEntry">
                <RadzenNumeric @bind-Value="journalEntry.ExtractionTimeInSeconds" Style="width:100%"
                    ShowUpDown="false" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="EspressoWeightInGrams" Title="Espresso Weight (g)">
            <EditTemplate Context="journalEntry">
                <RadzenNumeric @bind-Value="journalEntry.EspressoWeightInGrams" Style="width:100%" ShowUpDown="false" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="BitternessRank" Title="Bitterness Rank">
            <EditTemplate Context="journalEntry">
                <RadzenDropDown @bind-Value="journalEntry.BitternessRank" Data="@rankings" TextProperty="Name"
                    ValueProperty="Value" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="AcidityRank" Title="Acidity Rank">
            <EditTemplate Context="journalEntry">
                <RadzenDropDown @bind-Value="journalEntry.AcidityRank" Data="@rankings" TextProperty="Name"
                    ValueProperty="Value" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="SourRank" Title="Sour Rank">
            <EditTemplate Context="journalEntry">
                <RadzenDropDown @bind-Value="journalEntry.SourRank" Data="@rankings" TextProperty="Name"
                    ValueProperty="Value" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="CremaRank" Title="Crema Rank">
            <EditTemplate Context="journalEntry">
                <RadzenDropDown @bind-Value="journalEntry.CremaRank" Data="@rankings" TextProperty="Name"
                    ValueProperty="Value" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="SatisfactionRank" Title="Satisfaction Rank">
            <EditTemplate Context="journalEntry">
                <RadzenDropDown @bind-Value="journalEntry.SatisfactionRank" Data="@rankings" TextProperty="Name"
                    ValueProperty="Value" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="Comments" Title="Comments">
            <EditTemplate Context="journalEntry">
                <RadzenTextBox @bind-Value="journalEntry.Comments" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="DateCreate" Title="Date Created" Frozen="true" />

        <RadzenDataGridColumn TItem="JournalEntryModel" Property="DateUpdate" Title="Date Updated" Frozen="true" />

        <RadzenDataGridColumn Context="journalEntry" Filterable="false" Sortable="false" TextAlign="TextAlign.Right"
            Frozen="true" FrozenPosition="FrozenColumnPosition.Right">
            <Template Context="journalEntry">
                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat"
                    Size="ButtonSize.Medium" Click="@(args => EditRow(journalEntry))" @onclick:stopPropagation="true">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat"
                    Shade="Shade.Lighter" Size="ButtonSize.Medium" class="rz-my-1 rz-ms-1"
                    Click="@(args => DeleteRow(journalEntry))" @onclick:stopPropagation="true">
                </RadzenButton>
            </Template>
            <EditTemplate Context="journalEntry">
                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat"
                    Size="ButtonSize.Medium" Click="@((args) => SaveRow(journalEntry))" aria-label="Save">
                </RadzenButton>
                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat"
                    Size="ButtonSize.Medium" class="rz-my-1 rz-ms-1" Click="@((args) => CancelEdit(journalEntry))"
                    aria-label="Cancel">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat"
                    Shade="Shade.Lighter" Size="ButtonSize.Medium" class="rz-my-1 rz-ms-1"
                    Click="@(args => DeleteRow(journalEntry))" aria-label="Delete">
                </RadzenButton>
            </EditTemplate>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    RadzenDataGrid<JournalEntryModel> journalEntryGrid;
    DataGridEditMode editMode = DataGridEditMode.Single;
    IEnumerable<JournalEntryModel> journalEntries;
    List<JournalEntryModel> journalEntriesToCreate = new List<JournalEntryModel>();
    List<JournalEntryModel> journalEntriesToUpdate = new List<JournalEntryModel>();
    List<object> rankings = new List<object>
{
new { Name = "1", Value = 1 },
new { Name = "2", Value = 2 },
new { Name = "3", Value = 3 },
new { Name = "4", Value = 4 },
new { Name = "5", Value = 5 }
};
    private void Reset()
    {
        journalEntriesToCreate.Clear();
        journalEntriesToUpdate.Clear();
    }

    private void Reset(JournalEntryModel journalEntry)
    {
        var itemToRemove = journalEntriesToCreate.FirstOrDefault(j => j.Id == journalEntry.Id);
        if (itemToRemove != null)
        {
            journalEntriesToCreate.Remove(itemToRemove);
            journalEntriesToUpdate.Remove(itemToRemove);
        }
    }

    // Load data from the database
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        journalEntries = await dataAccess.GetJournalEntriesAsync();
    }

    // Prepares the grid for inserting (create) a new row
    // Triggered by the click event of the Add New Journal Entry button
    private async Task InsertRow()
    {
        if (editMode == DataGridEditMode.Single)
        {
            Reset();
        }

        var newJournalEntry = new JournalEntryModel();

        journalEntriesToCreate.Add(newJournalEntry);

        // call underlying radzen datagrid method to insert row
        await journalEntryGrid.InsertRow(newJournalEntry);
    }

    // Persist new JournalEntryModel to the database
    // Triggered by the RowCreate event of the RadzenDataGrid
    private async Task OnCreateRow(JournalEntryModel journalEntry)
    {
        await dataAccess.AddJournalEntryAsync(journalEntry);
        journalEntriesToCreate.Remove(journalEntry);

        await OnInitializedAsync();
        await journalEntryGrid.Reload();
    }

    private async Task EditRow(JournalEntryModel journalEntry)
    {
        if (editMode == DataGridEditMode.Single && journalEntriesToCreate.Count() > 0)
        {
            Reset();
        }

        var newJournalEntry = new JournalEntryModel
            {
                Id = journalEntry.Id,
                EspressoBeanId = journalEntry.EspressoBeanId,
                GrinderId = journalEntry.GrinderId,
                GrindSetting = journalEntry.GrindSetting,
                BeanWeightInGrams = journalEntry.BeanWeightInGrams,
                PreExtractionTimeInSeconds = journalEntry.PreExtractionTimeInSeconds,
                ExtractionTimeInSeconds = journalEntry.ExtractionTimeInSeconds,
                EspressoWeightInGrams = journalEntry.EspressoWeightInGrams,
                BitternessRank = journalEntry.BitternessRank,
                AcidityRank = journalEntry.AcidityRank,
                SourRank = journalEntry.SourRank,
                CremaRank = journalEntry.CremaRank,
                SatisfactionRank = journalEntry.SatisfactionRank,
                Comments = journalEntry.Comments
            };

        journalEntriesToUpdate.Add(newJournalEntry);
        await journalEntryGrid.EditRow(journalEntry);
    }

    // Update existing JournalEntryModel in the database
    // Triggered by the RowUpdate event of the RadzenDataGrid
    private async Task OnUpdateRow(JournalEntryModel journalEntry)
    {
        Reset(journalEntry);
        await dataAccess.UpdateJournalEntryAsync(journalEntry);
    }

    private void SaveRow(JournalEntryModel journalEntry)
    {
        journalEntryGrid.UpdateRow(journalEntry);
    }

    private async Task CancelEdit(JournalEntryModel journalEntry)
    {
        var originalJournalEntry = journalEntries.FirstOrDefault(j => j.Id == journalEntry.Id);
        journalEntry.EspressoBeanId = originalJournalEntry.EspressoBeanId;
        journalEntry.GrinderId = originalJournalEntry.GrinderId;
        journalEntry.GrindSetting = originalJournalEntry.GrindSetting;
        journalEntry.BeanWeightInGrams = originalJournalEntry.BeanWeightInGrams;
        journalEntry.PreExtractionTimeInSeconds = originalJournalEntry.PreExtractionTimeInSeconds;
        journalEntry.ExtractionTimeInSeconds = originalJournalEntry.ExtractionTimeInSeconds;
        journalEntry.EspressoWeightInGrams = originalJournalEntry.EspressoWeightInGrams;
        journalEntry.BitternessRank = originalJournalEntry.BitternessRank;
        journalEntry.AcidityRank = originalJournalEntry.AcidityRank;
        journalEntry.SourRank = originalJournalEntry.SourRank;
        journalEntry.CremaRank = originalJournalEntry.CremaRank;
        journalEntry.SatisfactionRank = originalJournalEntry.SatisfactionRank;
        journalEntry.Comments = originalJournalEntry.Comments;

        Reset(journalEntry);
        journalEntryGrid.CancelEditRow(journalEntry);
        await journalEntryGrid.Reload();
    }

    // Delete existing JournalEntryModel from the database
    // Triggered by the RowDelete event of the RadzenDataGrid
    private async Task DeleteRow(JournalEntryModel journalEntry)
    {
        Reset(journalEntry);

        if (journalEntries.Contains(journalEntry))
        {
            await dataAccess.DeleteJournalEntryAsync(journalEntry);
            await OnInitializedAsync();
            await journalEntryGrid.Reload();
        }
        else
        {
            journalEntryGrid.CancelEditRow(journalEntry);
            await journalEntryGrid.Reload();
        }
    }
}